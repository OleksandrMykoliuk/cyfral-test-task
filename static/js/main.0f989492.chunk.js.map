{"version":3,"sources":["components/SelectForm/SelectForm.js","components/InputForm/InputForm.js","components/LoginForm/LoginForm.js","components/RegistrationForm/RegistrationForm.js","components/AllUsers/AllUsers.js","components/InputChange/InputChange.js","components/ChangeForm/ChangeForm.js","components/MainMenu/MainMenu.js","App.jsx","index.js"],"names":["SelectForm","logins","setCurrentUser","setNeedRegistration","setIsLogined","useState","selectedUser","setSelectedUser","currentPassword","setCurrentPassword","error","setError","seePassword","setSeePassword","className","Form","onSubmit","event","preventDefault","user","JSON","parse","localStorage","getItem","userPassword","Group","controlId","Label","Control","as","value","onChange","target","map","InputGroup","type","placeholder","Append","Button","variant","onClick","block","InputForm","setNewLogin","setNewPassword","newLogin","newPassword","LoginForm","Object","keys","length","RegistrationForm","name","setName","position","setPosition","phone","setPhone","login","setLogin","password","setPassword","confirmedPassword","setConfirmedPassword","userName","userPosition","userPhone","setItem","stringify","autofocus","AllUsers","users","userParameters","currentUser","parameters","values","pop","join","ListGroup","Item","InputChange","input","setInput","output","setOutput","ChangeForm","Row","Col","removeItem","MainMenu","key","setKey","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","App","isLogined","needRegistration","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f989492.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport './SelectForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const SelectForm = ({ logins,\n  setCurrentUser,\n  setNeedRegistration,\n  setIsLogined }) => {\n  const [selectedUser, setSelectedUser] = useState(logins[0]);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [error, setError] = useState('');\n  const [seePassword, setSeePassword] = useState(false);\n\n  const handleSubmitSelect = (event) => {\n    event.preventDefault();\n    const user = JSON.parse(localStorage.getItem(selectedUser));\n\n    if (currentPassword === user.userPassword) {\n      setCurrentUser(selectedUser);\n      setIsLogined(true);\n    }\n\n    setError('Please, write valid password!');\n    setCurrentPassword('');\n  };\n\n  const handleSelectChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setError('');\n    setCurrentPassword(event.target.value);\n  };\n\n  const buttonHandle = () => {\n    setNeedRegistration(true);\n  };\n\n  return (\n    <div className=\"SelectForm\">\n      <Form onSubmit={handleSubmitSelect}>\n        <Form.Group controlId=\"SelectForm.input\">\n          <Form.Label>Select User</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={selectedUser}\n            onChange={handleSelectChange}\n          >\n            {logins.map(user => (\n              <option key={user} value={user}>\n                {user}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"InputForm.password\">\n          <Form.Label>Password</Form.Label>\n          <InputGroup className=\"mb-3\">\n            <Form.Control\n              type={\n                seePassword ? 'text' : 'password'\n              }\n              value={currentPassword}\n              onChange={handlePasswordChange}\n              placeholder=\"Password\"\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                type=\"button\"\n                onClick={() => {\n                  setSeePassword(!seePassword);\n                }}\n              >\n                {\n                  seePassword ? 'Hide' : 'Show'\n                }\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          block\n          type=\"submit\"\n        >\n          Login\n        </Button>\n      </Form>\n      <p className=\"SelectForm__error\">{error}</p>\n      <Button\n        variant=\"secondary\"\n        block\n        type=\"button\"\n        onClick={buttonHandle}\n        className=\"SelectForm__new-user\"\n      >\n        Create new user\n      </Button>\n    </div>\n  );\n};\n\nSelectForm.propTypes = {\n  logins: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setNeedRegistration: PropTypes.func.isRequired,\n  setIsLogined: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport './InputForm.scss';\n\nexport const InputForm = ({ setNewLogin,\n  setNewPassword,\n  setNeedRegistration,\n  newLogin,\n  newPassword }) => {\n  const [error, setError] = useState('');\n  const [seePassword, setSeePassword] = useState(false);\n  const handleInputChange = (event) => {\n    setNewLogin(event.target.value);\n    setError('');\n  };\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value);\n    setError('');\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newLogin && newPassword) {\n      setNeedRegistration(true);\n    }\n\n    setError('Please, fill every field!');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"InputForm.login\">\n        <Form.Label>Login</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Login\"\n          value={newLogin}\n          onChange={handleInputChange}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"InputForm.password\">\n        <Form.Label>Password</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            type={\n              seePassword ? 'text' : 'password'\n            }\n            value={newPassword}\n            onChange={handleNewPasswordChange}\n            placeholder=\"Password\"\n          />\n          <InputGroup.Append>\n            <Button\n              variant=\"outline-secondary\"\n              type=\"button\"\n              onClick={() => {\n                setSeePassword(!seePassword);\n              }}\n            >\n              {\n                seePassword ? 'Hide' : 'Show'\n              }\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        block\n      >\n        Submit\n      </Button>\n      <p className=\"InputForm__error\">\n        {error}\n      </p>\n    </Form>\n  );\n};\n\nInputForm.propTypes = {\n  newLogin: PropTypes.string.isRequired,\n  newPassword: PropTypes.string.isRequired,\n  setNeedRegistration: PropTypes.func.isRequired,\n  setNewPassword: PropTypes.func.isRequired,\n  setNewLogin: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './LoginForm.scss';\nimport PropTypes from 'prop-types';\nimport { SelectForm } from '../SelectForm/SelectForm';\nimport { InputForm } from '../InputForm/InputForm';\n\nexport const LoginForm = ({\n  setNeedRegistration,\n  setNewPassword,\n  setNewLogin,\n  newLogin,\n  newPassword,\n  setCurrentUser,\n  setIsLogined,\n}) => {\n  const logins = Object.keys(localStorage);\n\n  return (\n    <div className=\"LoginForm\">\n      {logins.length !== 0\n        ? (\n          <SelectForm\n            logins={logins}\n            setCurrentUser={setCurrentUser}\n            setIsLogined={setIsLogined}\n            setNeedRegistration={setNeedRegistration}\n          />\n        )\n        : (\n          <InputForm\n            setNewLogin={setNewLogin}\n            setNewPassword={setNewPassword}\n            setNeedRegistration={setNeedRegistration}\n            newLogin={newLogin}\n            newPassword={newPassword}\n          />\n        )}\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.string.isRequired,\n  newPassword: PropTypes.string.isRequired,\n  setIsLogined: PropTypes.func.isRequired,\n  setNeedRegistration: PropTypes.func.isRequired,\n  setNewPassword: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setNewLogin: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport './RegistrationForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const RegistrationForm = ({\n  newLogin,\n  newPassword,\n  setIsLogined,\n  setNeedRegistration,\n  setCurrentUser,\n}) => {\n  const [name, setName] = useState('');\n  const [position, setPosition] = useState('');\n  const [phone, setPhone] = useState('');\n  const [login, setLogin] = useState(newLogin);\n  const [password, setPassword] = useState(newPassword);\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n  const [error, setError] = useState('');\n  const [seePassword, setSeePassword] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (name\n      && position\n      && phone\n      && password\n      && confirmedPassword\n      && password === confirmedPassword) {\n      const user = {\n        userName: name,\n        userPosition: position,\n        userPhone: phone,\n        userPassword: password,\n      };\n\n      event.preventDefault();\n      localStorage.setItem(login, JSON.stringify(user));\n      setIsLogined(true);\n      setNeedRegistration(false);\n      setCurrentUser(login);\n    }\n\n    setError('Please, fill every field or check confirmed password!');\n  };\n\n  return (\n    <div className=\"RegistrationForm\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"RegistrationForm.login\">\n          <Form.Label>Login</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Login\"\n            value={login}\n            onChange={(event) => {\n              setLogin(event.target.value);\n              setError('');\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"RegistrationForm.password\">\n          <Form.Label>Password</Form.Label>\n          <InputGroup className=\"mb-3\">\n            <Form.Control\n              type={\n                seePassword ? 'text' : 'password'\n              }\n              value={password}\n              onChange={(event) => {\n                setPassword(event.target.value);\n                setError('');\n              }}\n              placeholder=\"Password\"\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                type=\"button\"\n                value={password}\n                onClick={() => {\n                  setSeePassword(!seePassword);\n                }}\n              >\n                {\n                  seePassword ? 'Hide' : 'Show'\n                }\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group controlId=\"RegistrationForm.confirmpassword\">\n          <Form.Label>Confirm password</Form.Label>\n          <InputGroup className=\"mb-3\">\n            <Form.Control\n              type={\n                seePassword ? 'text' : 'password'\n              }\n              placeholder=\"Confirm password\"\n              value={confirmedPassword}\n              onChange={(event) => {\n                setConfirmedPassword(event.target.value);\n                setError('');\n              }}\n              autofocus\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                type=\"button\"\n                value={password}\n                onClick={() => {\n                  setSeePassword(!seePassword);\n                }}\n              >\n                {\n                  seePassword ? 'Hide' : 'Show'\n                }\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group controlId=\"RegistrationForm.position\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"John Smith\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n              setError('');\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"RegistrationForm.position\">\n          <Form.Label>Position</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Developer\"\n            value={position}\n            onChange={(event) => {\n              setPosition(event.target.value);\n              setError('');\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"RegistrationForm.position\">\n          <Form.Label>Phone number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"+380505555555\"\n            value={phone}\n            onChange={(event) => {\n              setPhone(event.target.value);\n              setError('');\n            }}\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          block\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n        <p className=\"RegistrationForm__error\">{error}</p>\n      </Form>\n    </div>\n  );\n};\n\nRegistrationForm.propTypes = {\n  newLogin: PropTypes.string.isRequired,\n  newPassword: PropTypes.string.isRequired,\n  setIsLogined: PropTypes.func.isRequired,\n  setNeedRegistration: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './AllUsers.scss';\nimport { ListGroup } from 'react-bootstrap';\n\nexport const AllUsers = () => {\n  const users = Object.keys(localStorage);\n  const userParameters = (user) => {\n    const currentUser = JSON.parse(localStorage.getItem(user));\n    const parameters = Object.values(currentUser);\n\n    parameters.pop();\n\n    return parameters.join(', ');\n  };\n\n  return (\n    <div className=\"AllUsers\">\n      <ListGroup>\n        {\n          users.map(user => (\n            <ListGroup.Item key={user}>\n              {`${user} (${userParameters(user)})`}\n            </ListGroup.Item>\n\n          ))\n        }\n      </ListGroup>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport './InputChange.scss';\n\nexport const InputChange = () => {\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleOutputChange = (event) => {\n    setOutput(event.target.value);\n  };\n\n  const handleButton = () => {\n    setOutput(input);\n  };\n\n  return (\n    <div className=\"InputChange\">\n      <Form>\n        <Form.Control\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Input\"\n        />\n        <Button\n          block\n          variant=\"danger\"\n          type=\"button\"\n          onClick={handleButton}\n        >\n          Set Value\n        </Button>\n        <Form.Control\n          type=\"text\"\n          value={output}\n          onChange={handleOutputChange}\n          placeholder=\"Output\"\n        />\n      </Form>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport './ChangeForm.scss';\n\nexport const ChangeForm = ({ currentUser, setCurrentUser }) => {\n  const user = JSON.parse(localStorage.getItem(currentUser));\n  const [login, setLogin] = useState('');\n  const [name, setName] = useState('');\n  const [position, setPosition] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n\n  const buttonLoginHandle = () => {\n    localStorage.removeItem(currentUser);\n    localStorage.setItem(login, JSON.stringify(user));\n    setCurrentUser(login);\n    setLogin('');\n  };\n\n  const buttonHandle = () => {\n    if (name) {\n      user.userName = name;\n      setName('');\n    }\n\n    if (position) {\n      user.userPosition = position;\n      setPosition('');\n    }\n\n    if (phone) {\n      user.userPhone = name;\n      setPhone('');\n    }\n\n    if (password\n      && confirmedPassword\n      && password === confirmedPassword) {\n      user.userPassword = password;\n      setPassword('');\n      setConfirmedPassword('');\n    }\n\n    localStorage.setItem(currentUser, JSON.stringify(user));\n  };\n\n  return (\n    <div className=\"ChangeForm\">\n      <Form>\n        <br />\n        <Row>\n          <Col>\n            <span>\n              {`Login : ${currentUser}`}\n            </span>\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Change login\"\n              value={login}\n              onChange={(event) => {\n                setLogin(event.target.value);\n              }}\n            />\n          </Col>\n          <Col>\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              onClick={buttonLoginHandle}\n            >\n              Change login\n            </Button>\n          </Col>\n        </Row>\n        <br />\n        <hr />\n        <Row>\n          <Col>\n            <span>\n              {`Name : ${user.userName}`}\n            </span>\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Change name\"\n              value={name}\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <span>\n              {`Position : ${user.userPosition}`}\n            </span>\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Change position\"\n              value={position}\n              onChange={(event) => {\n                setPosition(event.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <span>\n              {`Phone number : ${user.userPhone}`}\n            </span>\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Change phone\"\n              value={phone}\n              onChange={(event) => {\n                setPhone(event.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <span>\n              {`Password : ${user.userPassword}`}\n            </span>\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Change password\"\n              value={password}\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmedPassword}\n              onChange={(event) => {\n                setConfirmedPassword(event.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <br />\n        <Button\n          block\n          variant=\"primary\"\n          type=\"button\"\n          onClick={buttonHandle}\n        >\n          Confirm\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nChangeForm.propTypes = {\n  currentUser: PropTypes.string.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './MainMenu.scss';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { AllUsers } from '../AllUsers/AllUsers';\nimport { InputChange } from '../InputChange/InputChange';\nimport { ChangeForm } from '../ChangeForm/ChangeForm';\n\nexport const MainMenu = ({ currentUser, setCurrentUser }) => {\n  const [key, setKey] = useState('change');\n\n  return (\n    <div className=\"MainMenu\">\n      <Tabs\n        id=\"controlled-tab-example\"\n        activeKey={key}\n        onSelect={k => setKey(k)}\n      >\n        <Tab eventKey=\"change\" title=\"Change parameters\">\n          <ChangeForm\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n          />\n        </Tab>\n        <Tab eventKey=\"all\" title=\"All users\">\n          <AllUsers />\n        </Tab>\n        <Tab eventKey=\"input\" title=\"Input change\">\n          <InputChange />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nMainMenu.propTypes = {\n  currentUser: PropTypes.string.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { LoginForm } from './components/LoginForm/LoginForm';\nimport { RegistrationForm }\n  from './components/RegistrationForm/RegistrationForm';\nimport { MainMenu } from './components/MainMenu/MainMenu';\n\nexport const App = () => {\n  const [isLogined, setIsLogined] = useState(false);\n  const [needRegistration, setNeedRegistration] = useState(false);\n  const [newLogin, setNewLogin] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n\n  return (\n    <div className=\"App\">\n      {!isLogined\n      && !needRegistration\n      && (\n        <LoginForm\n          setIsLogined={setIsLogined}\n          setNewLogin={setNewLogin}\n          setNewPassword={setNewPassword}\n          setNeedRegistration={setNeedRegistration}\n          newLogin={newLogin}\n          newPassword={newPassword}\n          setCurrentUser={setCurrentUser}\n          currentUser={currentUser}\n        />\n      )}\n      {\n        !isLogined\n        && needRegistration\n        && (\n          <RegistrationForm\n            setIsLogined={setIsLogined}\n            setNeedRegistration={setNeedRegistration}\n            newLogin={newLogin}\n            newPassword={newPassword}\n            setCurrentUser={setCurrentUser}\n          />\n        )\n      }\n      {\n        isLogined\n      && (\n        <MainMenu\n          currentUser={currentUser}\n          setCurrentUser={setCurrentUser}\n        />\n      )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}